module kogge_stone_32bit(
    input  wire [31:0] A,
    input  wire [31:0] B,
    input  wire        Cin,
    output wire [31:0] Sum,
    output wire        Cout
);

  // Stage 0: initial generate/propagate.
  wire [31:0] G0, P0;
  assign G0 = A & B;
  assign P0 = A ^ B;

  // Stage 1: offset = 1.
  wire [31:0] G1, P1;
  assign G1[0]  = G0[0];
  assign P1[0]  = P0[0];
  assign G1[1]  = G0[1]  | (P0[1]  & G0[0]);
  assign P1[1]  = P0[1]  & P0[0];
  assign G1[2]  = G0[2]  | (P0[2]  & G0[1]);
  assign P1[2]  = P0[2]  & P0[1];
  assign G1[3]  = G0[3]  | (P0[3]  & G0[2]);
  assign P1[3]  = P0[3]  & P0[2];
  assign G1[4]  = G0[4]  | (P0[4]  & G0[3]);
  assign P1[4]  = P0[4]  & P0[3];
  assign G1[5]  = G0[5]  | (P0[5]  & G0[4]);
  assign P1[5]  = P0[5]  & P0[4];
  assign G1[6]  = G0[6]  | (P0[6]  & G0[5]);
  assign P1[6]  = P0[6]  & P0[5];
  assign G1[7]  = G0[7]  | (P0[7]  & G0[6]);
  assign P1[7]  = P0[7]  & P0[6];
  assign G1[8]  = G0[8]  | (P0[8]  & G0[7]);
  assign P1[8]  = P0[8]  & P0[7];
  assign G1[9]  = G0[9]  | (P0[9]  & G0[8]);
  assign P1[9]  = P0[9]  & P0[8];
  assign G1[10] = G0[10] | (P0[10] & G0[9]);
  assign P1[10] = P0[10] & P0[9];
  assign G1[11] = G0[11] | (P0[11] & G0[10]);
  assign P1[11] = P0[11] & P0[10];
  assign G1[12] = G0[12] | (P0[12] & G0[11]);
  assign P1[12] = P0[12] & P0[11];
  assign G1[13] = G0[13] | (P0[13] & G0[12]);
  assign P1[13] = P0[13] & P0[12];
  assign G1[14] = G0[14] | (P0[14] & G0[13]);
  assign P1[14] = P0[14] & P0[13];
  assign G1[15] = G0[15] | (P0[15] & G0[14]);
  assign P1[15] = P0[15] & P0[14];
  assign G1[16] = G0[16] | (P0[16] & G0[15]);
  assign P1[16] = P0[16] & P0[15];
  assign G1[17] = G0[17] | (P0[17] & G0[16]);
  assign P1[17] = P0[17] & P0[16];
  assign G1[18] = G0[18] | (P0[18] & G0[17]);
  assign P1[18] = P0[18] & P0[17];
  assign G1[19] = G0[19] | (P0[19] & G0[18]);
  assign P1[19] = P0[19] & P0[18];
  assign G1[20] = G0[20] | (P0[20] & G0[19]);
  assign P1[20] = P0[20] & P0[19];
  assign G1[21] = G0[21] | (P0[21] & G0[20]);
  assign P1[21] = P0[21] & P0[20];
  assign G1[22] = G0[22] | (P0[22] & G0[21]);
  assign P1[22] = P0[22] & P0[21];
  assign G1[23] = G0[23] | (P0[23] & G0[22]);
  assign P1[23] = P0[23] & P0[22];
  assign G1[24] = G0[24] | (P0[24] & G0[23]);
  assign P1[24] = P0[24] & P0[23];
  assign G1[25] = G0[25] | (P0[25] & G0[24]);
  assign P1[25] = P0[25] & P0[24];
  assign G1[26] = G0[26] | (P0[26] & G0[25]);
  assign P1[26] = P0[26] & P0[25];
  assign G1[27] = G0[27] | (P0[27] & G0[26]);
  assign P1[27] = P0[27] & P0[26];
  assign G1[28] = G0[28] | (P0[28] & G0[27]);
  assign P1[28] = P0[28] & P0[27];
  assign G1[29] = G0[29] | (P0[29] & G0[28]);
  assign P1[29] = P0[29] & P0[28];
  assign G1[30] = G0[30] | (P0[30] & G0[29]);
  assign P1[30] = P0[30] & P0[29];
  assign G1[31] = G0[31] | (P0[31] & G0[30]);
  assign P1[31] = P0[31] & P0[30];

  // Stage 2: offset = 2.
  wire [31:0] G2, P2;
  assign G2[0] = G1[0];
  assign P2[0] = P1[0];
  assign G2[1] = G1[1];
  assign P2[1] = P1[1];
  assign G2[2] = G1[2] | (P1[2] & G1[0]);
  assign P2[2] = P1[2] & P1[0];
  assign G2[3] = G1[3] | (P1[3] & G1[1]);
  assign P2[3] = P1[3] & P1[1];
  assign G2[4] = G1[4] | (P1[4] & G1[2]);
  assign P2[4] = P1[4] & P1[2];
  assign G2[5] = G1[5] | (P1[5] & G1[3]);
  assign P2[5] = P1[5] & P1[3];
  assign G2[6] = G1[6] | (P1[6] & G1[4]);
  assign P2[6] = P1[6] & P1[4];
  assign G2[7] = G1[7] | (P1[7] & G1[5]);
  assign P2[7] = P1[7] & P1[5];
  assign G2[8] = G1[8] | (P1[8] & G1[6]);
  assign P2[8] = P1[8] & P1[6];
  assign G2[9] = G1[9] | (P1[9] & G1[7]);
  assign P2[9] = P1[9] & P1[7];
  assign G2[10] = G1[10] | (P1[10] & G1[8]);
  assign P2[10] = P1[10] & P1[8];
  assign G2[11] = G1[11] | (P1[11] & G1[9]);
  assign P2[11] = P1[11] & P1[9];
  assign G2[12] = G1[12] | (P1[12] & G1[10]);
  assign P2[12] = P1[12] & P1[10];
  assign G2[13] = G1[13] | (P1[13] & G1[11]);
  assign P2[13] = P1[13] & P1[11];
  assign G2[14] = G1[14] | (P1[14] & G1[12]);
  assign P2[14] = P1[14] & P1[12];
  assign G2[15] = G1[15] | (P1[15] & G1[13]);
  assign P2[15] = P1[15] & P1[13];
  assign G2[16] = G1[16] | (P1[16] & G1[14]);
  assign P2[16] = P1[16] & P1[14];
  assign G2[17] = G1[17] | (P1[17] & G1[15]);
  assign P2[17] = P1[17] & P1[15];
  assign G2[18] = G1[18] | (P1[18] & G1[16]);
  assign P2[18] = P1[18] & P1[16];
  assign G2[19] = G1[19] | (P1[19] & G1[17]);
  assign P2[19] = P1[19] & P1[17];
  assign G2[20] = G1[20] | (P1[20] & G1[18]);
  assign P2[20] = P1[20] & P1[18];
  assign G2[21] = G1[21] | (P1[21] & G1[19]);
  assign P2[21] = P1[21] & P1[19];
  assign G2[22] = G1[22] | (P1[22] & G1[20]);
  assign P2[22] = P1[22] & P1[20];
  assign G2[23] = G1[23] | (P1[23] & G1[21]);
  assign P2[23] = P1[23] & P1[21];
  assign G2[24] = G1[24] | (P1[24] & G1[22]);
  assign P2[24] = P1[24] & P1[22];
  assign G2[25] = G1[25] | (P1[25] & G1[23]);
  assign P2[25] = P1[25] & P1[23];
  assign G2[26] = G1[26] | (P1[26] & G1[24]);
  assign P2[26] = P1[26] & P1[24];
  assign G2[27] = G1[27] | (P1[27] & G1[25]);
  assign P2[27] = P1[27] & P1[25];
  assign G2[28] = G1[28] | (P1[28] & G1[26]);
  assign P2[28] = P1[28] & P1[26];
  assign G2[29] = G1[29] | (P1[29] & G1[27]);
  assign P2[29] = P1[29] & P1[27];
  assign G2[30] = G1[30] | (P1[30] & G1[28]);
  assign P2[30] = P1[30] & P1[28];
  assign G2[31] = G1[31] | (P1[31] & G1[29]);
  assign P2[31] = P1[31] & P1[29];

  // Stage 3: offset = 4.
  wire [31:0] G3, P3;
  assign G3[0] = G2[0];
  assign P3[0] = P2[0];
  assign G3[1] = G2[1];
  assign P3[1] = P2[1];
  assign G3[2] = G2[2];
  assign P3[2] = P2[2];
  assign G3[3] = G2[3];
  assign P3[3] = P2[3];
  assign G3[4] = G2[4] | (P2[4] & G2[0]);
  assign P3[4] = P2[4] & P2[0];
  assign G3[5] = G2[5] | (P2[5] & G2[1]);
  assign P3[5] = P2[5] & P2[1];
  assign G3[6] = G2[6] | (P2[6] & G2[2]);
  assign P3[6] = P2[6] & P2[2];
  assign G3[7] = G2[7] | (P2[7] & G2[3]);
  assign P3[7] = P2[7] & P2[3];
  assign G3[8] = G2[8] | (P2[8] & G2[4]);
  assign P3[8] = P2[8] & P2[4];
  assign G3[9] = G2[9] | (P2[9] & G2[5]);
  assign P3[9] = P2[9] & P2[5];
  assign G3[10] = G2[10] | (P2[10] & G2[6]);
  assign P3[10] = P2[10] & P2[6];
  assign G3[11] = G2[11] | (P2[11] & G2[7]);
  assign P3[11] = P2[11] & P2[7];
  assign G3[12] = G2[12] | (P2[12] & G2[8]);
  assign P3[12] = P2[12] & P2[8];
  assign G3[13] = G2[13] | (P2[13] & G2[9]);
  assign P3[13] = P2[13] & P2[9];
  assign G3[14] = G2[14] | (P2[14] & G2[10]);
  assign P3[14] = P2[14] & P2[10];
  assign G3[15] = G2[15] | (P2[15] & G2[11]);
  assign P3[15] = P2[15] & P2[11];
  assign G3[16] = G2[16] | (P2[16] & G2[12]);
  assign P3[16] = P2[16] & P2[12];
  assign G3[17] = G2[17] | (P2[17] & G2[13]);
  assign P3[17] = P2[17] & P2[13];
  assign G3[18] = G2[18] | (P2[18] & G2[14]);
  assign P3[18] = P2[18] & P2[14];
  assign G3[19] = G2[19] | (P2[19] & G2[15]);
  assign P3[19] = P2[19] & P2[15];
  assign G3[20] = G2[20] | (P2[20] & G2[16]);
  assign P3[20] = P2[20] & P2[16];
  assign G3[21] = G2[21] | (P2[21] & G2[17]);
  assign P3[21] = P2[21] & P2[17];
  assign G3[22] = G2[22] | (P2[22] & G2[18]);
  assign P3[22] = P2[22] & P2[18];
  assign G3[23] = G2[23] | (P2[23] & G2[19]);
  assign P3[23] = P2[23] & P2[19];
  assign G3[24] = G2[24] | (P2[24] & G2[20]);
  assign P3[24] = P2[24] & P2[20];
  assign G3[25] = G2[25] | (P2[25] & G2[21]);
  assign P3[25] = P2[25] & P2[21];
  assign G3[26] = G2[26] | (P2[26] & G2[22]);
  assign P3[26] = P2[26] & P2[22];
  assign G3[27] = G2[27] | (P2[27] & G2[23]);
  assign P3[27] = P2[27] & P2[23];
  assign G3[28] = G2[28] | (P2[28] & G2[24]);
  assign P3[28] = P2[28] & P2[24];
  assign G3[29] = G2[29] | (P2[29] & G2[25]);
  assign P3[29] = P2[29] & P2[25];
  assign G3[30] = G2[30] | (P2[30] & G2[26]);
  assign P3[30] = P2[30] & P2[26];
  assign G3[31] = G2[31] | (P2[31] & G2[27]);
  assign P3[31] = P2[31] & P2[27];

  // Stage 4: offset = 8.
  wire [31:0] G4, P4;
  assign G4[0] = G3[0];
  assign P4[0] = P3[0];
  assign G4[1] = G3[1];
  assign P4[1] = P3[1];
  assign G4[2] = G3[2];
  assign P4[2] = P3[2];
  assign G4[3] = G3[3];
  assign P4[3] = P3[3];
  assign G4[4] = G3[4];
  assign P4[4] = P3[4];
  assign G4[5] = G3[5];
  assign P4[5] = P3[5];
  assign G4[6] = G3[6];
  assign P4[6] = P3[6];
  assign G4[7] = G3[7];
  assign P4[7] = P3[7];
  assign G4[8] = G3[8]  | (P3[8]  & G3[0]);
  assign P4[8] = P3[8]  & P3[0];
  assign G4[9] = G3[9]  | (P3[9]  & G3[1]);
  assign P4[9] = P3[9]  & P3[1];
  assign G4[10] = G3[10] | (P3[10] & G3[2]);
  assign P4[10] = P3[10] & P3[2];
  assign G4[11] = G3[11] | (P3[11] & G3[3]);
  assign P4[11] = P3[11] & P3[3];
  assign G4[12] = G3[12] | (P3[12] & G3[4]);
  assign P4[12] = P3[12] & P3[4];
  assign G4[13] = G3[13] | (P3[13] & G3[5]);
  assign P4[13] = P3[13] & P3[5];
  assign G4[14] = G3[14] | (P3[14] & G3[6]);
  assign P4[14] = P3[14] & P3[6];
  assign G4[15] = G3[15] | (P3[15] & G3[7]);
  assign P4[15] = P3[15] & P3[7];
  assign G4[16] = G3[16] | (P3[16] & G3[8]);
  assign P4[16] = P3[16] & P3[8];
  assign G4[17] = G3[17] | (P3[17] & G3[9]);
  assign P4[17] = P3[17] & P3[9];
  assign G4[18] = G3[18] | (P3[18] & G3[10]);
  assign P4[18] = P3[18] & P3[10];
  assign G4[19] = G3[19] | (P3[19] & G3[11]);
  assign P4[19] = P3[19] & P3[11];
  assign G4[20] = G3[20] | (P3[20] & G3[12]);
  assign P4[20] = P3[20] & P3[12];
  assign G4[21] = G3[21] | (P3[21] & G3[13]);
  assign P4[21] = P3[21] & P3[13];
  assign G4[22] = G3[22] | (P3[22] & G3[14]);
  assign P4[22] = P3[22] & P3[14];
  assign G4[23] = G3[23] | (P3[23] & G3[15]);
  assign P4[23] = P3[23] & P3[15];
  assign G4[24] = G3[24] | (P3[24] & G3[16]);
  assign P4[24] = P3[24] & P3[16];
  assign G4[25] = G3[25] | (P3[25] & G3[17]);
  assign P4[25] = P3[25] & P3[17];
  assign G4[26] = G3[26] | (P3[26] & G3[18]);
  assign P4[26] = P3[26] & P3[18];
  assign G4[27] = G3[27] | (P3[27] & G3[19]);
  assign P4[27] = P3[27] & P3[19];
  assign G4[28] = G3[28] | (P3[28] & G3[20]);
  assign P4[28] = P3[28] & P3[20];
  assign G4[29] = G3[29] | (P3[29] & G3[21]);
  assign P4[29] = P3[29] & P3[21];
  assign G4[30] = G3[30] | (P3[30] & G3[22]);
  assign P4[30] = P3[30] & P3[22];
  assign G4[31] = G3[31] | (P3[31] & G3[23]);
  assign P4[31] = P3[31] & P3[23];

  // Stage 5: offset = 16.
  wire [31:0] G5, P5;
  assign G5[0]  = G4[0];
  assign P5[0]  = P4[0];
  assign G5[1]  = G4[1];
  assign P5[1]  = P4[1];
  assign G5[2]  = G4[2];
  assign P5[2]  = P4[2];
  assign G5[3]  = G4[3];
  assign P5[3]  = P4[3];
  assign G5[4]  = G4[4];
  assign P5[4]  = P4[4];
  assign G5[5]  = G4[5];
  assign P5[5]  = P4[5];
  assign G5[6]  = G4[6];
  assign P5[6]  = P4[6];
  assign G5[7]  = G4[7];
  assign P5[7]  = P4[7];
  assign G5[8]  = G4[8];
  assign P5[8]  = P4[8];
  assign G5[9]  = G4[9];
  assign P5[9]  = P4[9];
  assign G5[10] = G4[10];
  assign P5[10] = P4[10];
  assign G5[11] = G4[11];
  assign P5[11] = P4[11];
  assign G5[12] = G4[12];
  assign P5[12] = P4[12];
  assign G5[13] = G4[13];
  assign P5[13] = P4[13];
  assign G5[14] = G4[14];
  assign P5[14] = P4[14];
  assign G5[15] = G4[15];
  assign P5[15] = P4[15];
  assign G5[16] = G4[16] | (P4[16] & G4[0]);
  assign P5[16] = P4[16] & P4[0];
  assign G5[17] = G4[17] | (P4[17] & G4[1]);
  assign P5[17] = P4[17] & P4[1];
  assign G5[18] = G4[18] | (P4[18] & G4[2]);
  assign P5[18] = P4[18] & P4[2];
  assign G5[19] = G4[19] | (P4[19] & G4[3]);
  assign P5[19] = P4[19] & P4[3];
  assign G5[20] = G4[20] | (P4[20] & G4[4]);
  assign P5[20] = P4[20] & P4[4];
  assign G5[21] = G4[21] | (P4[21] & G4[5]);
  assign P5[21] = P4[21] & P4[5];
  assign G5[22] = G4[22] | (P4[22] & G4[6]);
  assign P5[22] = P4[22] & P4[6];
  assign G5[23] = G4[23] | (P4[23] & G4[7]);
  assign P5[23] = P4[23] & P4[7];
  assign G5[24] = G4[24] | (P4[24] & G4[8]);
  assign P5[24] = P4[24] & P4[8];
  assign G5[25] = G4[25] | (P4[25] & G4[9]);
  assign P5[25] = P4[25] & P4[9];
  assign G5[26] = G4[26] | (P4[26] & G4[10]);
  assign P5[26] = P4[26] & P4[10];
  assign G5[27] = G4[27] | (P4[27] & G4[11]);
  assign P5[27] = P4[27] & P4[11];
  assign G5[28] = G4[28] | (P4[28] & G4[12]);
  assign P5[28] = P4[28] & P4[12];
  assign G5[29] = G4[29] | (P4[29] & G4[13]);
  assign P5[29] = P4[29] & P4[13];
  assign G5[30] = G4[30] | (P4[30] & G4[14]);
  assign P5[30] = P4[30] & P4[14];
  assign G5[31] = G4[31] | (P4[31] & G4[15]);
  assign P5[31] = P4[31] & P4[15];

  // Final carry computation.
  // C[0] is Cin; for i = 0 to 31, C[i+1] = G5[i] or (P5[i] and Cin).
  wire [32:0] C;
  assign C[0]  = Cin;
  assign C[1]  = G5[0]  | (P5[0]  & Cin);
  assign C[2]  = G5[1]  | (P5[1]  & Cin);
  assign C[3]  = G5[2]  | (P5[2]  & Cin);
  assign C[4]  = G5[3]  | (P5[3]  & Cin);
  assign C[5]  = G5[4]  | (P5[4]  & Cin);
  assign C[6]  = G5[5]  | (P5[5]  & Cin);
  assign C[7]  = G5[6]  | (P5[6]  & Cin);
  assign C[8]  = G5[7]  | (P5[7]  & Cin);
  assign C[9]  = G5[8]  | (P5[8]  & Cin);
  assign C[10] = G5[9]  | (P5[9]  & Cin);
  assign C[11] = G5[10] | (P5[10] & Cin);
  assign C[12] = G5[11] | (P5[11] & Cin);
  assign C[13] = G5[12] | (P5[12] & Cin);
  assign C[14] = G5[13] | (P5[13] & Cin);
  assign C[15] = G5[14] | (P5[14] & Cin);
  assign C[16] = G5[15] | (P5[15] & Cin);
  assign C[17] = G5[16] | (P5[16] & Cin);
  assign C[18] = G5[17] | (P5[17] & Cin);
  assign C[19] = G5[18] | (P5[18] & Cin);
  assign C[20] = G5[19] | (P5[19] & Cin);
  assign C[21] = G5[20] | (P5[20] & Cin);
  assign C[22] = G5[21] | (P5[21] & Cin);
  assign C[23] = G5[22] | (P5[22] & Cin);
  assign C[24] = G5[23] | (P5[23] & Cin);
  assign C[25] = G5[24] | (P5[24] & Cin);
  assign C[26] = G5[25] | (P5[25] & Cin);
  assign C[27] = G5[26] | (P5[26] & Cin);
  assign C[28] = G5[27] | (P5[27] & Cin);
  assign C[29] = G5[28] | (P5[28] & Cin);
  assign C[30] = G5[29] | (P5[29] & Cin);
  assign C[31] = G5[30] | (P5[30] & Cin);
  assign C[32] = G5[31] | (P5[31] & Cin);

  // Final sum and carry-out.
  assign Sum  = P0 ^ C[31:0];
  assign Cout = C[32];

endmodule
